###
# app configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:tokenstore]
use = egg:tokenstore

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_debugtoolbar
    pyramid_debugtoolbar_dogpile

sqlalchemy.url = sqlite:///%(here)s/tokenstore.sqlite

retry.attempts = 3

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1
debugtoolbar.hosts = 0.0.0.0/0

oidc.issuer = http://localhost:8080/auth/realms/local
oidc.client_id = token
#oidc.client_secret =
#oidc.audience=workspaceapp
oidc.verify_aud = false

oidc.providers = extern
oidc.extern.issuer = http://localhost:8080/auth/realms/extern
oidc.extern.client_id = extern-client
oidc.extern.client_secret = a4e637d4-75d1-43a8-9a5f-5ba9705fefea
oidc.extern.scope = openid email profile offline_access
oidc.extern.metadata.name = External Provider
oidc.extern.metadata.url = http://localhost:8080/auth/realms/extern/account
oidc.extern.metadata.description = Access to External Provider
# These are strings, the UI can use to render icons and logos.
oidc.extern.metadata.icon = extern-icon
oidc.extern.metadata.logo = extern-logo


session.factory = pyramid_oidc.session.SessionFactory
# pwgen -cns 32
session.secret = SF8uGBgMbcsNDGsCA3tGqVnUbxcrteac
session.cookie_opts.secure = False
session.cookie_opts.httponly = False
session.dogpile_opts.backend = dogpile.cache.memory
session.dogpile_opts.expiration_timeout = 1200

#cors.Access-Control-Allow-Credentials = true
cors.Access-Control-Allow-Headers = Accept,Accept-Language,Content-Language,Content-Type,Authorization
cors.allowed_origins = https?://localhost(:\d+)?

openapi.spec = tokenstore:openapi.yaml

[pshell]
setup = tokenstore.pshell.setup
default_shell = ipython

###
# wsgi server configuration
###

[alembic]
# path to migration scripts
script_location = tokenstore:alembic
file_template = %%(year)d%%(month).2d%%(day).2d_%%(rev)s
# custom option to tell alembic which section contains sqlalchemy.url
# see tokenstore/alembic/env.py
app_section = tokenstore
# file_template = %%(rev)s_%%(slug)s

[filter:translogger]
use = egg:Paste#translogger

[pipeline:main]
pipeline =
  translogger
  tokenstore

[server:main]
use = egg:waitress#main
listen = 0.0.0.0:6543

###
# logging configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, tokenstore, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_tokenstore]
level = DEBUG
handlers =
qualname = tokenstore

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s
